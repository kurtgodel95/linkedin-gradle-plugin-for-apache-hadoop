/*
 * Copyright 2015 LinkedIn Corp.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not
 * use this file except in compliance with the License. You may obtain a copy of
 * the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
 * License for the specific language governing permissions and limitations under
 * the License.
 */
package com.linkedin.gradle.hadoopValidator;

import org.gradle.api.GradleException;


/**
 * The HadoopValidatorUtil class provides some static methods which may be used throughout the plugin by any of the validators, without instantiating the class.
 */
class HadoopValidatorUtil {

  /**
   * This function scans the passed properties object and returns the NameNode address and port.
   * @param properties - the properties object generated by reading .hadoopValidatorProperties
   * @param projectDir - the project home directory
   * @return the qualified namenode address with port
   */
  static String getNameNodeAddress(Properties properties,String projectDir){
    String clusterURIString;
    if (properties != null && properties.containsKey("NameNode")) {
      clusterURIString = properties.getProperty("NameNode");
    } else {
      throw new GradleException("Please specify NameNode address in $projectDir/.hadoopValidatorProperties");
    }
    if (!(clusterURIString ==~ /hdfs\:\/\/.*?\:[0-9]+/)) {
      throw new GradleException("Invalid NameNode specification in $projectDir/.hadoopValidatorProperties\n" +
          "Please specify NameNode address as NameNode=hdfs://<namenode>:<port>");
    }
    return clusterURIString;
  }

  /**
   * This function scans the passed properties object and returns the repository URL.
   * @param properties - the properties object generated by reading .hadoopValidatorProperties
   * @param projectDir - the project home directory
   * @return the ivy repository url
   */
  static String getRepoURL(properties,String projectDir){
    String repo_url;
    if (properties.containsKey("repositoryURL")) {
      repo_url = properties.getProperty("repositoryURL");
    } else {
      throw new GradleException("Please specify ivy repository url in $projectDir/.hadoopValidatorProperties");
    }
    return repo_url;
  }
}
